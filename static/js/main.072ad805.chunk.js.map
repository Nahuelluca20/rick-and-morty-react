{"version":3,"sources":["images/arrow.svg","images/left-arrow.svg","images/portal.png","images/github.svg","images/instagram.svg","images/twitter.svg","images/rym-logo.png","images/coding.svg","pages/Characters.js","pages/Home.js","pages/Project.js","components/Navigation.js","components/Foot.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Characters","useState","data","setData","count","setCount","useEffect","fetchData","url","a","axios","get","res","results","changePageNext","e","preventDefault","changePagePrev","className","onClick","src","arrowLeft","arrowRight","style","justifyContent","map","p","key","id","image","alt","name","gender","location","status","Home","socialMedia","img","Github","Instagram","Twitter","RickAndMorty","item","href","Project","Navigation","navItems","title","process","component","to","exact","path","Foot","Coding","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.072ad805.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.4b713cfe.svg\";","module.exports = __webpack_public_path__ + \"static/media/left-arrow.77c86913.svg\";","module.exports = __webpack_public_path__ + \"static/media/portal.59605127.png\";","module.exports = __webpack_public_path__ + \"static/media/github.1f33e75d.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.bb026c4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.7e145c9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/rym-logo.efd2d130.png\";","module.exports = __webpack_public_path__ + \"static/media/coding.ee1fc1ed.svg\";","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport arrowRight from '../images/arrow.svg'\r\nimport arrowLeft from '../images/left-arrow.svg'\r\n\r\nexport default function Characters() {\r\n    const [data, setData] = useState([])\r\n    const [count, setCount] = useState(2)\r\n    useEffect(() => {\r\n        fetchData()\r\n    },[])\r\n\r\n    const fetchData = async(url) => {\r\n        const res = await axios.get(`https://rickandmortyapi.com/api/character/?page=` + url)\r\n        await setData(res.data.results)\r\n\r\n    }\r\n    const changePageNext = async(e) => {\r\n        e.preventDefault()\r\n        await setCount(count + 1)\r\n        await fetchData(count)\r\n    }\r\n    const changePagePrev = async(e) => {\r\n        e.preventDefault()\r\n        await setCount(count - 1)\r\n        await fetchData(count)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"py-10 flex justify-center\">\r\n                <form className=\"flex\">\r\n                    <div className=\"p-5\">\r\n                        <button className=\" bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-l w-24\" onClick={changePagePrev}>\r\n                            Previus\r\n                            <img src={arrowLeft}></img>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"p-5\">\r\n                        <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-r w-24\" onClick={changePageNext}>\r\n                            Next\r\n                            <img src={arrowRight}></img>\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"flex flex-wrap pt-20\" style={{justifyContent:'center'}}>\r\n                {\r\n                    data.map((p) => {\r\n                        return(\r\n                            <div key={p.id} className=\"flex p-5\">\r\n                            <div className=\"bg-white rounded-lg lg:flex shadow-2xl items-center\">\r\n                                    <div>\r\n                                        <img src={p.image} alt={p.name} className=\"rounded-full p-2\"></img>  \r\n                                    </div>\r\n                                    <div className=\"font-serif lg:flex-wrap\">\r\n                                        <article className=\"p-5\">\r\n                                            <h4 className=\"p-3 bg-green-600 rounded-full w-56\">Name: {p.name}</h4>\r\n                                        </article>\r\n                                        <article className=\"p-5\">\r\n                                            <h4 className=\"p-3 bg-green-600 rounded-full w-56\">Gender: {p.gender}</h4>\r\n                                        </article>\r\n                                        <article className=\"p-5\">\r\n                                            <h4 className=\"p-3 bg-green-600 rounded-full w-56\">Location: {p.location.name}</h4>\r\n                                        </article>\r\n                                        <article className=\"p-5\">\r\n                                            <h4 className=\"p-3 bg-green-600 rounded-full w-56\">Status: {p.status}</h4>\r\n                                        </article>\r\n                                    </div>\r\n                            </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"py-10 flex justify-center\">\r\n                <form className=\"flex\">\r\n                    <div className=\"p-5\">\r\n                        <button className=\" bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-l w-24\" onClick={changePagePrev}>\r\n                            Previus\r\n                            <img src={arrowLeft}></img>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"p-5\">\r\n                        <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-r w-24\" onClick={changePageNext}>\r\n                            Next\r\n                            <img src={arrowRight}></img>\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport RickAndMorty from '../images/portal.png'\r\nimport Github from '../images/github.svg'\r\nimport Instagram from '../images/instagram.svg'\r\nimport Twitter from '../images/twitter.svg'\r\n\r\nexport default function Home() {\r\n    const socialMedia = [\r\n        {\r\n            url:'https://github.com/Nahuelluca20',\r\n            img:Github\r\n        },\r\n        {\r\n            url:'https://www.instagram.com/nahuel_lucaa/',\r\n            img:Instagram\r\n        },\r\n        {\r\n            url:'https://twitter.com/nahuel_lucaa',\r\n            img:Twitter\r\n        },\r\n    ]\r\n    return (\r\n        <>\r\n        <div className=\"flex justify-center\">\r\n            <img src={RickAndMorty} className=\"lg:w-2/4\"></img>\r\n        </div>\r\n        <div>\r\n            <ul className=\"lg:flex justify-center\">\r\n                {\r\n                    socialMedia.map((item) => {\r\n                        return(\r\n                            <li className=\"p-16 flex justify-center\" key={item.url}>\r\n                                <div>\r\n                                    <a href={item.url} className=\"\">\r\n                                        <img src={item.img} className=\"w-10\"></img>\r\n                                    </a>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Project() {\r\n    return (\r\n        <div>\r\n            <div className=\"py-20 px-10\">\r\n                <h1 className=\"font-bold text-white text-5xl\">About this Project</h1>\r\n                <p className=\"text-white text-2xl py-10\">\r\n                    This is a project where the <a className=\"underline\" href=\"https://rickandmortyapi.com/\">Rick and Morty</a> API \r\n                    is consumed.<br/> The technologies used are React for the Fron-end, \r\n                    Axios <br/> for the data request and Tailwindcss for the web style.\r\n                    </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport Characters from '../pages/Characters'\r\nimport Home from '../pages/Home'\r\nimport Project from '../pages/Project'\r\nimport RickAndMorty from '../images/rym-logo.png'\r\n\r\nexport default function Navigation() {\r\n    const navItems = [\r\n        {\r\n            title:'Home',\r\n            url:`${process.env.PUBLIC_URL}/`,\r\n            component:<Home />\r\n        },\r\n        {\r\n            title:'Characters',\r\n            url:`${process.env.PUBLIC_URL}/characters`,\r\n            component:<Characters />\r\n        },\r\n        {\r\n            title:'About',\r\n            url:`${process.env.PUBLIC_URL}/about`,\r\n            component:<Project />\r\n        }    \r\n    ]\r\n    return (\r\n        <Router>\r\n            <nav className=\"\">\r\n                {\r\n                    navItems.map((item) => {\r\n                        return(\r\n                            <li key={item.title} className=\"inline-flex px-5 py-10 font-serif\">\r\n\r\n                                <Link to={item.url}>\r\n                                    {item.title}\r\n                                </Link>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                <div className=\"lg:float-right flex justify-center\">\r\n                    <img src={RickAndMorty} className=\"w-64 px-2\"></img>\r\n                </div>\r\n            </nav>\r\n\r\n        <Switch>\r\n                {\r\n                    navItems.map((item) => {\r\n                        return(\r\n                            <Route exact path={item.url} key={item.title}>\r\n                                {item.component}\r\n                            </Route>\r\n                        )\r\n                    })\r\n                }\r\n        </Switch>\r\n\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Coding from '../images/coding.svg'\r\n\r\nexport default function Foot() {\r\n    return (\r\n        <div className=\"flex justify-center py-10\">\r\n            <div className=\"flex\">\r\n                <h1 className=\"text-base\">Created by Nahuel Luca  </h1>\r\n                <div className=\"px-2 py-1\">\r\n                    <img src={Coding} className=\"w-5\"></img>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport './tailwind.output.css';\nimport Navigation from './components/Navigation'\nimport Foot from './components/Foot';\n\nfunction App() {\n  return (\n    <div className=\"app-fondo\">\n      <Navigation />\n      <Foot />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}